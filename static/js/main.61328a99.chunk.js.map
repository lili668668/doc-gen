{"version":3,"sources":["components/form/FormHook.ts","components/form/DropDown.tsx","components/form/Editor.tsx","components/form/FormStateProvider.tsx","components/form/FormHelper.ts","components/form/FormField.tsx","helpers/documentHelper.ts","components/Presentation.tsx","components/form/ExampleButton.tsx","App.tsx","examples/paginationReq.ts","examples/paginationRes.ts","serviceWorker.ts","index.tsx"],"names":["handleValidations","validations","value","form","lastSubmitForm","setError","some","validation","func","stop","newError","error","React","memo","props","label","defaultValue","onChange","disabled","fullWidth","placeholder","options","onBlur","onFocus","helperText","autoFocus","variant","margin","useState","internValue","setInternValue","useEffect","undefined","useInternValue","selectValue","map","option","includes","FormControl","InputLabel","Select","event","target","index","MenuItem","key","name","FormHelperText","code","setCode","Grid","container","direction","spacing","item","FormLabel","width","height","language","theme","useCallback","FormStateProvider","Context","context","onSubmit","getValueFromEvent","getChangedForm","disableField","children","formState","formValidation","initError","useMemo","Object","keys","reduce","object","entry","assign","setLastSubmitForm","useReducer","state","action","type","filter","when","length","changed","every","result","isPass","dispatch","disableSubmit","forEach","useDebouncedCallback","handleDebouncedSubmit","collection","handleSubmit","preventDefault","handleChange","handleOther","useForm","Provider","getValueFromChangeEvent","getValueFromValue","FormField","Component","component","restProps","useContext","parseJSON","str","parse","getType","isInteger","isNumber","isString","isBoolean","isArray","isObject","getCommentString","query","id","console","log","beforeSymbols","Symbol","for","comment","all","trim","getItems","data","items","properties","getProperties","omitBy","isUndefined","description","getRequestBody","request","requestWithComment","examples","content","schema","getResponseBody","response","responseWithComment","ref","replace","allOf","toYaml","path","url","platform","prefix","getUrl","parameters","split","in","required","concat","queryWithComment","getQueryParameters","summary","assignee","tags","tag","security","JWT","operationId","slice","requestBody","responses","responseCode","api","paths","method","toLowerCase","yaml","stringify","useStyles","makeStyles","invisible","position","top","left","classes","createRef","Fragment","Button","color","onClick","current","select","document","execCommand","className","readOnly","style","monokai","showLineNumbers","field","example","presetation","maxHeight","right","overflowY","initialForm","defaultFrom","FormContext","createContext","methodOptions","platformOptions","TextField","MuiTextField","App","createMuiTheme","palette","primary","yellow","secondary","orange","ThemeProvider","CssBaseline","Box","padding","xs","DropDown","multiline","Editor","Consumer","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61328a99.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useMemo,\n  useReducer,\n  useCallback,\n  FormEvent,\n  Dispatch,\n  SetStateAction\n} from 'react'\nimport { useDebouncedCallback } from 'use-debounce'\nimport { FormError } from './FormHelper'\nimport { ValidateFunc, ValidationTimePoint } from './Validator'\n\nconst handleValidations = <FormType, Value>(\n  validations: Array<{\n    func: ValidateFunc<FormType>\n    when: Array<ValidationTimePoint>\n  }>,\n  value: Value,\n  form: FormType,\n  lastSubmitForm: FormType,\n  setError: Dispatch<SetStateAction<FormError<FormType>>>\n) => {\n  validations.some((validation) => {\n    const { stop, newError } = validation.func(value, form, lastSubmitForm)\n    setError((error) => ({ ...error, ...newError }))\n    return stop\n  })\n}\n\nexport const useInternValue = <Value>(\n  defaultValue: Value,\n  value?: Value\n): [Value, Dispatch<SetStateAction<Value>>] => {\n  const [internValue, setInternValue] = useState<Value>(defaultValue)\n  useEffect(() => {\n    if (value !== undefined) {\n      setInternValue(value)\n    }\n  }, [value])\n  return [internValue, setInternValue]\n}\n\nexport type ValueGetter<FormType> = {\n  [key in keyof FormType]: (event: unknown) => FormType[key]\n}\n\nexport type FormValidation<FormType> = {\n  [key in keyof FormType]: Array<{\n    func: ValidateFunc<FormType>,\n    when: Array<ValidationTimePoint>\n  }>\n}\n\nexport type ChangedFormGetter<FormType> = Partial<{\n  [key in keyof FormType]: (value: FormType[key], form: FormType) => FormType\n}>\n\nexport type DisableFieldGetter<FormType> = Partial<{\n  [key in keyof FormType]: (value: FormType[key], form: FormType) => boolean\n}>\n\nexport interface SetAction<FormType> {\n  type: 'set'\n  value: FormType\n}\n\nexport interface ChangeAction<FormType, Value> {\n  type: 'change'\n  label: keyof FormType\n  value: Value\n}\n\nexport interface OtherEventAction<FormType> {\n  type: 'blur' | 'focus'\n  label: keyof FormType\n}\n\nexport interface SubmitAction {\n  type: 'submit'\n}\n\nexport interface FormState<FormType> {\n  value: FormType\n  dispatch: Dispatch<SetAction<FormType> | ChangeAction<FormType, any> | OtherEventAction<FormType> | SubmitAction>\n  handleSubmit: (event: FormEvent<HTMLFormElement>) => void\n  handleChange: (label: keyof FormType) => (event: unknown) => void\n  handleOther: (type: 'blur' | 'focus', label: keyof FormType) => () => void\n  error: FormError<FormType>\n  setError: Dispatch<SetStateAction<FormError<FormType>>>\n  disableSubmit: boolean\n  disabled: { [key in keyof FormType]: boolean }\n  lastSubmitForm: FormType\n}\n\nexport const createDefaultFormState = <FormType>(defaultValue: FormType): FormState<FormType> => ({\n  value: defaultValue,\n  dispatch: () => {},\n  handleSubmit: (form) => form,\n  handleChange: () => () => {},\n  handleOther: () => () => {},\n  error: {} as FormError<FormType>,\n  setError: () => {},\n  disableSubmit: true,\n  disabled: {} as { [key in keyof FormType]: boolean },\n  lastSubmitForm: defaultValue\n})\n\nexport const useForm = <FormType>(options: {\n  defaultValue: FormType\n  onSubmit: (form: FormType) => FormType\n  getValueFromEvent: ValueGetter<FormType>\n  formValidation: FormValidation<FormType>\n  getChangedForm?: ChangedFormGetter<FormType>\n  disableField?: DisableFieldGetter<FormType>\n}): FormState<FormType> => {\n  const {\n    defaultValue,\n    onSubmit,\n    getValueFromEvent,\n    formValidation,\n    getChangedForm,\n    disableField\n  } = options\n\n  const initError = useMemo(() => {\n    return Object.keys(defaultValue)\n      .map((key) => ({ [key]: null }))\n      .reduce((object, entry) => Object.assign({}, object, entry), {}) as FormError<FormType>\n  }, [defaultValue])\n\n  const [error, setError] = useState<FormError<FormType>>(initError)\n  const [lastSubmitForm, setLastSubmitForm] = useState<FormType>(defaultValue)\n  \n  function valueReducer (\n    state: FormType,\n    action: SetAction<FormType> | ChangeAction<FormType, any> | OtherEventAction<FormType> | SubmitAction\n  ) {\n    const { type } = action\n    if (type === 'set') {\n      const { value } = action as SetAction<FormType>\n      return value\n    }\n    if (type === 'blur') {\n      const { label } = action as OtherEventAction<FormType>\n      const validations = formValidation[label as keyof FormType]\n        .filter((item) => item.when.includes('blur'))\n      if (validations.length === 0) return state\n      handleValidations(validations, state[label as keyof FormType], state, lastSubmitForm, setError)\n      return state\n    }\n    if (type === 'focus') {\n      const { label } = action as OtherEventAction<FormType>\n      const validations = formValidation[label as keyof FormType]\n        .filter((item) => item.when.includes('focus'))\n      if (validations.length === 0) return state\n      handleValidations(validations, state[label as keyof FormType], state, lastSubmitForm, setError)\n      return state\n    }\n    if (type === 'change') {\n      const { label, value } = action as ChangeAction<FormType, any>\n      const validations = formValidation[label as keyof FormType]\n        .filter((item) => item.when.includes('change'))\n      if (getChangedForm !== undefined && getChangedForm[label as keyof FormType] !== undefined) {\n        const changed = getChangedForm[label as keyof FormType]!(value, state)\n        handleValidations(validations, changed[label as keyof FormType], changed, lastSubmitForm, setError)\n        return changed\n      }\n      const changed = { ...state, [label]: value }\n      handleValidations(validations, changed[label as keyof FormType], changed, lastSubmitForm, setError)\n      return changed\n    }\n    if (type === 'submit') {\n      const pass = Object.keys(state)\n        .every((key) => {\n          if (formValidation[key as keyof FormType] === undefined) return true\n          return formValidation[key as keyof FormType]\n            .filter((item) => item.when.includes('beforeSubmit'))\n            .every((validation) => {\n              const result = validation.func(state[key as keyof FormType], state, lastSubmitForm)\n              if (result.isPass) {\n                setError((error) => ({ ...error, ...result.newError }))\n                return true\n              }\n              setError((error) => ({ ...error, ...result.newError }))\n              return false\n            })\n        })\n      if (pass) return onSubmit(state)\n      return state\n    }\n    return state\n  }\n\n  const [value, dispatch] = useReducer(\n    useCallback(valueReducer, [formValidation, getChangedForm, onSubmit, lastSubmitForm]),\n    defaultValue\n  )\n\n  useEffect(() => dispatch({ type: 'set', value: defaultValue }), [defaultValue])\n\n  const disableSubmit = useMemo(() => {\n    return !Object.keys(value)\n      .every((key) => {\n        if (formValidation[key as keyof FormType] === undefined) return true\n        return formValidation[key as keyof FormType]\n          .filter((item) => item.when.includes('beforeClickSubmit'))\n          .every((validation) => {\n            return validation.func(value[key as keyof FormType], value, lastSubmitForm).isPass\n              && error[key as keyof FormType] === null\n          })\n      })\n  }, [value, error, formValidation, lastSubmitForm])\n\n  useEffect(() => {\n    Object.keys(value)\n      .forEach((key) => {\n        if (formValidation[key as keyof FormType] === undefined) return\n        const validations = formValidation[key as keyof FormType]\n          .filter((item) => item.when.includes('rerender'))\n        if (validations.length === 0) return\n        handleValidations(validations, value[key as keyof FormType], value, lastSubmitForm, setError)\n      })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, formValidation])\n\n  const [handleDebouncedSubmit] = useDebouncedCallback(() => {\n    setLastSubmitForm(value)\n    dispatch({ type: 'submit' })\n  }, 200)\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    handleDebouncedSubmit()\n  }\n  const handleChange = (label: keyof FormType) => (event: unknown) => dispatch({\n    type: 'change',\n    label,\n    value: getValueFromEvent[label](event)\n  })\n  const handleOther = (type: 'blur' | 'focus', label: keyof FormType) => () => dispatch({ type, label })\n\n  const disabled = useMemo(() => {\n    return Object.keys(value)\n      .map((key) => {\n        if (disableField !== undefined && disableField[key as keyof FormType] !== undefined) {\n          return { [key as keyof FormType]: disableField[key as keyof FormType]!(value[key as keyof FormType], value) }\n        }\n        return { [key as keyof FormType]: false }\n      })\n      .reduce((collection, item) => Object.assign({}, collection, item), {}) as { [key in keyof FormType]: boolean }\n  }, [value, disableField])\n\n  return {\n    value,\n    dispatch,\n    handleSubmit,\n    handleChange,\n    handleOther,\n    error,\n    setError,\n    disableSubmit,\n    disabled,\n    lastSubmitForm\n  }\n}\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { useInternValue } from './FormHook'\n\nexport interface DropDownProps {\n  label: string\n  value?: string | number | string[] | undefined\n  defaultValue?: string | number | string[] | undefined\n  onChange?: (event: React.ChangeEvent<{\n    name?: string | undefined\n    value: unknown\n  }>) => void\n  options: Array<{\n    name: string\n    value: string | number | string[] | undefined\n  }>\n  disabled?: boolean\n  fullWidth?: boolean\n  placeholder?: string\n  onBlur?: () => void\n  onFocus?: () => void\n  helperText?: string\n  error?: boolean\n  autoFocus?: boolean\n  variant?: 'standard' | 'outlined' | 'filled'\n  margin?: 'none' | 'dense'\n}\n\nconst DropDown: React.FC<DropDownProps> = (props) => {\n  const {\n    label,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    fullWidth,\n    placeholder,\n    options,\n    onBlur,\n    onFocus,\n    helperText,\n    error,\n    autoFocus,\n    variant,\n    margin\n  } = props\n\n  const [internValue, setInternValue] = useInternValue<string | number | string[] | undefined>(\n    defaultValue || value,\n    value\n  )\n\n  const selectValue = options.map((option) => option.value).includes(internValue) ? internValue : ''\n\n  return (\n    <FormControl\n      fullWidth={fullWidth}\n      disabled={disabled}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      error={error}\n    >\n      <InputLabel>{ label }</InputLabel>\n      <Select\n        variant={variant || 'standard'}\n        placeholder={placeholder}\n        value={selectValue}\n        onChange={(event) => {\n          setInternValue(event.target.value as string | number | string[] | undefined)\n          if (onChange) onChange(event)\n        }}\n        autoFocus={autoFocus}\n        margin={margin}\n      >\n        {options.map((option, index) => (\n          <MenuItem key={index} value={option.value}>{option.name}</MenuItem>\n        ))}\n      </Select>\n      {helperText && (<FormHelperText>{helperText}</FormHelperText>)}\n    </FormControl>\n  )\n}\n\nexport default React.memo(DropDown)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport 'monaco-editor'\nimport MonacoEditor from 'react-monaco-editor'\nimport Grid from '@material-ui/core/Grid'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nexport interface EditorProps {\n  label?: string\n  value?: string\n  onChange?: (value: string) => void\n}\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { label, value, onChange } = props\n  const [code, setCode] = useState('')\n  useEffect(() => {\n    if (value) setCode(value)\n  }, [value])\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Grid item>\n        <FormLabel>{label || ''}</FormLabel>\n      </Grid>\n      <Grid item>\n        <MonacoEditor\n          width=\"100%\"\n          height=\"400\"\n          language=\"json\"\n          theme=\"vs-dark\"\n          value={code}\n          onChange={useCallback((value) => {\n            if (onChange) onChange(value)\n            setCode(value)\n          }, [onChange])}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default React.memo(Editor)\n","import React, { PropsWithChildren } from 'react'\nimport {\n  useForm,\n  ValueGetter,\n  FormValidation,\n  ChangedFormGetter,\n  FormState,\n  DisableFieldGetter\n} from './FormHook'\nimport { FormPropType } from './FormHelper'\n\ninterface PropTypes<FormType> extends FormPropType<FormType> {\n  context: React.Context<FormState<FormType>>\n  getValueFromEvent: ValueGetter<FormType>\n  validation: FormValidation<FormType>\n  getChangedForm?: ChangedFormGetter<FormType>\n  disableField?: DisableFieldGetter<FormType>\n}\n\nconst FormStateProvider = function<FormType> (props: PropsWithChildren<PropTypes<FormType>>) {\n  const {\n    context: Context,\n    defaultValue,\n    onSubmit,\n    getValueFromEvent,\n    validation,\n    getChangedForm,\n    disableField,\n    children\n  } = props\n\n  const formState = useForm<FormType>({\n    defaultValue,\n    onSubmit,\n    getValueFromEvent,\n    formValidation:\n    validation,\n    getChangedForm,\n    disableField,\n  })\n\n  const { handleSubmit } = formState\n\n  return (\n    <Context.Provider value={formState}>\n      <form onSubmit={handleSubmit}>\n        {children}\n      </form>\n    </Context.Provider>\n  )\n}\n\nexport default FormStateProvider\n","import { ChangeEvent } from 'react'\n\nexport type FormError<T> = { [key in keyof T]: string | null }\n\nexport interface FormPropType <FormType> {\n  defaultValue: FormType\n  onSubmit: (form: FormType) => FormType\n}\n\nexport function getValueFromChangeEvent<Value> (event: unknown) {\n  return (event as ChangeEvent<{ value: Value }>).target.value as Value\n}\n\nexport function getValueFromCheckboxEvent (event: unknown) {\n  return (event as ChangeEvent<HTMLInputElement>).target.checked\n}\n\nexport function getValueFromValue<Value> (event: unknown) {\n  return event as Value\n}\n\nexport function createHandleChange<EventType extends { value: unknown }, FormData> (\n  onFormChange: (changed: FormData) => void,\n  otherValue: FormData,\n  setError?: (error: FormError<FormData>) => void,\n  error?: FormError<FormData>\n) {\n  return (label: keyof FormData) => (event: ChangeEvent<EventType>) => {\n    if (setError && error && error[label] !== null) setError({ ...error, [label]: null })\n    onFormChange({ ...otherValue, [label]: event.target.value })\n  }\n}\n","import React, { useCallback, useContext } from 'react'\nimport { FormState } from './FormHook'\n\ninterface PropTypes<FormType> {\n  component: React.ElementType\n  name: keyof FormType\n  context: React.Context<FormState<FormType>>\n  helperText?: string\n}\n\nconst FormField = function<FormType, T> (props: PropTypes<FormType> & T) {\n  const { component: Component, name, context, helperText, ...restProps } = props\n\n  const { value, handleChange, handleOther, error, disabled } = useContext(context)\n\n  return (\n    <Component\n      value={value[name]}\n      onChange={useCallback(handleChange(name), [])}\n      onFocus={useCallback(handleOther('focus', name), [])}\n      onBlur={useCallback(handleOther('blur', name), [])}\n      helperText={error[name] || helperText || ''}\n      error={error[name] !== null}\n      disabled={disabled[name]}\n      {...restProps}\n    />\n  )\n}\n\nexport default FormField\n","import yaml from 'yaml'\nimport { isNumber, isInteger, isBoolean, isString, isObject, isArray, omitBy, isUndefined } from 'lodash-es'\nimport { parse } from 'comment-json'\nimport { PresentationProps, PlatForm } from '../components/Presentation'\n\nexport const getUrl = (platform: PlatForm, path: string): string => {\n  let prefix = '/'\n  switch(platform) {\n  case 'COMMON':\n    prefix = '/'\n    break\n  case 'AGENT':\n    prefix = '/agent/v1'\n    break\n  case 'ADMIN':\n    prefix = '/admin/v1'\n    break\n  }\n  return `${prefix}${path}`\n}\n\nexport const parseJSON = (str: string) => {\n  try {\n    return parse(str)\n  } catch {\n    return {}\n  }\n}\n\nexport const getPathParameters = (path: string): Array<{\n  in: string\n  name: string\n  schema: { type: string }\n  required: boolean\n}> => {\n  return path\n    .split('/')\n    .filter((item) => item.includes('{') && item.includes('}'))\n    .map((item) => item.replace(/[{}]/gi, ''))\n    .map((name) => ({\n      in: 'path',\n      name,\n      schema: {\n        type: 'string'\n      },\n      required: true\n    }))\n}\n\nexport const getType = (value: any): string => {\n  if (isInteger(value)) {\n    return 'integer'\n  } else if (isNumber(value)) {\n    return 'float'\n  } else if (isString(value)) {\n    return 'string'\n  } else if (isBoolean(value)) {\n    return 'boolean'\n  } else if (isArray(value)) {\n    return 'array'\n  } else if (isObject(value)) {\n    return 'object'\n  }\n  return ''\n}\n\nexport const getCommentString = (query: any, id: string): string => {\n  console.log(query)\n  const beforeSymbols = query[Symbol.for(`before:${id}`)]\n  const comments: string[] = beforeSymbols ? beforeSymbols.map((comment: any) => comment.value) : []\n  return comments.reduce((all, comment) => `${all}${comment.trim()}\\n`, '').trim()\n}\n\nexport const getItems = (value: any[]): { type: string, items?: any, properties?: any } => {\n  const type = getType(value[0])\n  const data = {\n    type,\n    items: type === 'array' ? getItems(value[0]) : undefined,\n    properties: type === 'object' ? getProperties(value[0]) : undefined\n  }\n  return omitBy(data, isUndefined) as { type: string, items?: any, properties?: any }\n}\n\nexport const getProperties = (value: any): any => {\n  return Object.keys(value)\n    .map((key) => {\n      const type = getType(value[key])\n      const data = {\n        description: getCommentString(value, key),\n        type,\n        items: type === 'array' ? getItems(value[key]) : undefined,\n        properties: type === 'object' ? getProperties(value[key]) : undefined\n      }\n      return {\n        [key]: omitBy(data, isUndefined)\n      }\n    })\n    .reduce((collection, item) => Object.assign({}, collection, item), {})\n}\n\nexport const getQueryParameters = (query: string): Array<{\n  in: string\n  name: string\n  description: string\n  schema: { type: string }\n  items?: { type: string, properties?: any }\n  properties?: any\n}> => {\n  const queryWithComment = parseJSON(query)\n  return Object.keys(queryWithComment)\n    .map((name) => {\n      const type = getType(queryWithComment[name])\n      const data = {\n        in: 'query',\n        name,\n        description: getCommentString(queryWithComment, name),\n        schema: { type },\n        items: type === 'array' ? getItems(queryWithComment[name]) : undefined,\n        properties: type === 'object' ? getProperties(queryWithComment[name]) : undefined\n      }\n      return omitBy(data, isUndefined) as {\n        in: string\n        name: string\n        description: string\n        schema: { type: string }\n        items?: { type: string, properties?: any }\n        properties?: any\n      }\n    })\n}\n\nexport const getRequestBody = (request: string): {\n  content: {\n    'application/json': {\n      schema: {\n        examples: any\n        type: string\n        items?: any\n        properties?: any\n      }\n    }\n  }\n} => {\n  const requestWithComment = parseJSON(request)\n  const type = getType(requestWithComment)\n  const data = {\n    type,\n    items: type === 'array' ? getItems(requestWithComment) : undefined,\n    properties: type === 'object' ? getProperties(requestWithComment) : undefined,\n    examples: requestWithComment\n  }\n  return {\n    content: {\n      'application/json': {\n        schema: omitBy(data, isUndefined) as {\n          examples: any\n          type: string\n          items?: any\n          properties?: any\n        }\n      }\n    }\n  }\n}\n\nexport const getResponseBody = (response: string, code: string) => {\n  const responseWithComment = parseJSON(response)\n  const type = getType(responseWithComment)\n  const data = {\n    type,\n    items: type === 'array' ? getItems(responseWithComment) : undefined,\n    properties: type === 'object' ? getProperties(responseWithComment) : undefined,\n    examples: responseWithComment\n  }\n  let schema = {}\n  const comment = responseWithComment[Symbol.for('before-all')]\n  if (comment !== undefined) {\n    const ref = comment[0].value.replace('ref:', '').trim()\n    schema = {\n      allOf: [\n        omitBy(data, isUndefined),\n        {\n          '$ref': ref\n        }\n      ]\n    }\n  } else {\n    schema = omitBy(data, isUndefined)\n  }\n  if (code === '204') {\n    return {\n      [code]: {\n        description: \"No Content\"\n      }\n    }\n  }\n  return {\n    [code]: {\n      description: code === '200' ? 'OK' : undefined,\n      content: {\n        'application/json': {\n          schema\n        }\n      }\n    }\n  }\n}\n\nexport const toYaml = (value: PresentationProps): string => {\n  const url = getUrl(value.platform, value.path)\n  const parameters = getPathParameters(url).concat(getQueryParameters(value.query) as any)\n  const data = {\n    summary: url,\n    description: `Assignee: ${value.assignee}\\n${value.description}`,\n    tags: [value.tag],\n    security: [{ JWT: [] }],\n    operationId: url.replace(/\\//gi, '.').slice(1),\n    parameters: parameters.length === 0 ? undefined : parameters,\n    requestBody: value.request === '' ? undefined : getRequestBody(value.request),\n    responses: getResponseBody(value.response, value.responseCode)\n  }\n  const api = {\n    paths: {\n      [url]: {\n        [value.method.toLowerCase()]: omitBy(data, isUndefined)\n      }\n    }\n  }\n  return yaml.stringify(api)\n}\n","import React, { useCallback, createRef } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport Button from '@material-ui/core/Button'\nimport { monokai } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport { toYaml } from '../helpers/documentHelper';\n\nexport type Method = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nexport type PlatForm = 'COMMON' | 'AGENT' | 'ADMIN'\n\nexport interface PresentationProps {\n  platform: PlatForm\n  assignee: string\n  path: string\n  method: Method\n  description: string\n  tag: string\n  query: string\n  request: string\n  responseCode: string\n  response: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n  invisible: {\n    position: 'absolute',\n    top: theme.spacing(4),\n    left: theme.spacing(4),\n    height: 0,\n    width: 0\n  }\n}))\n\nconst Presentation: React.FC<PresentationProps> = (props) => {\n  const classes = useStyles()\n  const yaml = toYaml(props)\n  const ref = createRef<HTMLTextAreaElement>()\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={useCallback(() => {\n          if (ref && ref.current) {\n            ref.current.select()\n          }\n          document.execCommand('copy')\n        }, [ref])}\n      >\n        複製\n      </Button>\n      <textarea className={classes.invisible} readOnly value={yaml} ref={ref} />\n      <SyntaxHighlighter language=\"yaml\" style={monokai} showLineNumbers>\n        {yaml}\n      </SyntaxHighlighter>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(Presentation)","import React, { PropsWithChildren, useContext } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { FormState } from './FormHook'\nimport { PresentationProps } from '../Presentation'\n\ninterface ExampleButtonProps {\n  context: React.Context<FormState<PresentationProps>>\n  field: keyof PresentationProps\n  example: string\n  responseCode?: string\n}\n\nconst ExampleButton: React.FC<PropsWithChildren<ExampleButtonProps>> = (props) => {\n  const { context, field, example, responseCode, children } = props\n  const { dispatch, value } = useContext(context)\n  return (\n    <Button\n      onClick={() => {\n        if (responseCode !== undefined) {\n          dispatch({ type: 'set', value: { ...value, responseCode, [field]: example } })\n        } else {\n          dispatch({ type: 'change', label: field, value: example })\n        }\n      }}\n      variant=\"outlined\"\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default React.memo(ExampleButton)","import React, { createContext } from 'react'\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core'\nimport yellow from '@material-ui/core/colors/yellow'\nimport orange from '@material-ui/core/colors/orange'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport MuiTextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport DropDown, { DropDownProps } from './components/form/DropDown'\nimport Editor, { EditorProps } from './components/form/Editor'\nimport { FormState, createDefaultFormState } from './components/form/FormHook'\nimport FormStateProvider from './components/form/FormStateProvider'\nimport { getValueFromChangeEvent, getValueFromValue } from './components/form/FormHelper'\nimport FormField from './components/form/FormField'\nimport Presentation, { PresentationProps } from './components/Presentation'\nimport ExampleButton from './components/form/ExampleButton'\nimport paginationReq from './examples/paginationReq'\nimport paginationRes from './examples/paginationRes'\n\nconst useStyles = makeStyles((theme) => ({\n  presetation: {\n    maxHeight: '100%',\n    width: '100%',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    overflowY: 'scroll'\n  }\n}))\n\nconst initialForm = (defaultFrom?: PresentationProps): PresentationProps => ({\n  platform: 'COMMON',\n  assignee: '',\n  path: '',\n  method: 'GET',\n  description: '',\n  tag: '',\n  query: '',\n  request: '',\n  responseCode: \"200\",\n  response: '',\n  ...defaultFrom\n})\n\nconst FormContext = createContext<FormState<PresentationProps>>(createDefaultFormState(initialForm()))\n\nconst methodOptions = [\n  { name: 'get', value: 'GET' },\n  { name: 'post', value: 'POST' },\n  { name: 'put', value: 'PUT' },\n  { name: 'delete', value: 'DELETE' }\n]\n\nconst platformOptions = [\n  { name: 'common (通用，或前台)', value: 'COMMON' },\n  { name: 'agent（代理後台）', value: 'AGENT' },\n  { name: 'admin（總後台）', value: 'ADMIN' }\n]\n\nconst TextField = React.memo(MuiTextField)\n\nconst App: React.FC = () => {\n  const classes = useStyles()\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: yellow,\n      secondary: orange\n    }\n  })\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <FormStateProvider\n        context={FormContext}\n        defaultValue={initialForm()}\n        getValueFromEvent={{\n          platform: getValueFromChangeEvent,\n          assignee: getValueFromChangeEvent,\n          path: getValueFromChangeEvent,\n          method: getValueFromChangeEvent,\n          description: getValueFromChangeEvent,\n          tag: getValueFromChangeEvent,\n          query: getValueFromValue,\n          request: getValueFromValue,\n          responseCode: getValueFromChangeEvent,\n          response: getValueFromValue\n        }}\n        validation={{\n          platform: [],\n          assignee: [],\n          path: [],\n          method: [],\n          description: [],\n          tag: [],\n          query: [],\n          request: [],\n          responseCode: [],\n          response: []\n        }}\n        onSubmit={(form) => form}\n      >\n        <Box padding={4}>\n          <Grid container direction=\"row\" spacing={4}>\n            <Grid item xs={6}>\n              <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                  <FormField<PresentationProps, DropDownProps>\n                    autoFocus\n                    fullWidth\n                    context={FormContext}\n                    component={DropDown}\n                    label=\"前綴\"\n                    name=\"platform\"\n                    options={platformOptions}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, TextFieldProps>\n                    fullWidth\n                    context={FormContext}\n                    component={TextField}\n                    label=\"負責人\"\n                    name=\"assignee\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, TextFieldProps>\n                    fullWidth\n                    context={FormContext}\n                    component={TextField}\n                    label=\"path\"\n                    name=\"path\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, DropDownProps>\n                    fullWidth\n                    context={FormContext}\n                    component={DropDown}\n                    label=\"method\"\n                    name=\"method\"\n                    options={methodOptions}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, TextFieldProps>\n                    fullWidth\n                    multiline\n                    context={FormContext}\n                    component={TextField}\n                    label=\"描述\"\n                    name=\"description\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, TextFieldProps>\n                    fullWidth\n                    context={FormContext}\n                    component={TextField}\n                    label=\"分類\"\n                    name=\"tag\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, EditorProps>\n                    context={FormContext}\n                    component={Editor}\n                    name=\"query\"\n                    label=\"Query Parameter Example\"\n                  />\n                  <ExampleButton\n                    context={FormContext}\n                    field=\"query\"\n                    example={paginationReq}\n                  >\n                    建立分頁請求資料範本\n                  </ExampleButton>\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, EditorProps>\n                    context={FormContext}\n                    component={Editor}\n                    name=\"request\"\n                    label=\"Request Body Example\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, TextFieldProps>\n                    fullWidth\n                    context={FormContext}\n                    component={TextField}\n                    label=\"Response Code\"\n                    name=\"responseCode\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormField<PresentationProps, EditorProps>\n                    context={FormContext}\n                    component={Editor}\n                    name=\"response\"\n                    label=\"Response Body Example\"\n                  />\n                  <ExampleButton\n                    context={FormContext}\n                    field=\"response\"\n                    responseCode=\"204\"\n                    example=\"\"\n                  >\n                    建立無資料回應範本\n                  </ExampleButton>\n                  <ExampleButton\n                    context={FormContext}\n                    field=\"response\"\n                    responseCode=\"200\"\n                    example={paginationRes}\n                  >\n                    建立分頁回應範本\n                  </ExampleButton>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={6} className={classes.presetation}>\n              <FormContext.Consumer>\n                {(formState) => {\n                  const { value } = formState\n                  return (<Presentation {...value} />)\n                }}\n              </FormContext.Consumer>\n            </Grid>\n          </Grid>\n        </Box>\n      </FormStateProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","export default `{\n  // 升冪、降冪\n  \"order\": \"asc\",\n  // 依照什麼排序\n  \"sort_by\": \"\"\n}\n`","export default `// ref: common.yaml#/components/schemas/pagination\n{\n  \"data\": [{\n    \n  }]\n}`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}